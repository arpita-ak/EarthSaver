{"version":3,"sources":["assets\\Script\\PlayerController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class PlayerController extends cc.Component {\r\n\r\n    //prefab cannot take references from scene nodes\r\n    //@property(cc.Node)\r\n    game = null;\r\n\r\n    //@property(cc.Node)\r\n    weaponParent: cc.Node = null;\r\n\r\n    @property(cc.Prefab)\r\n    weapon1: cc.Prefab = null;\r\n\r\n    protected offsetPos: cc.Vec3 = cc.v3(0, 0, 0);\r\n    protected delta: number = 0;\r\n\r\n    onLoad()\r\n    {\r\n        // disable collider and enable green highlight indicating player is safe\r\n        this.EnableCollisionManager(false, true);\r\n\r\n        cc.tween(this.node)\r\n        .sequence(\r\n            cc.tween(this.node).to(0.5, ({opacity: 0})), \r\n            cc.tween(this.node).to(0.5, ({opacity: 255})))\r\n        .repeat(3)\r\n        .start();\r\n\r\n        this.scheduleOnce(()=>{\r\n            // enable collider and disable green highlight indicating player is not protected and ready to fight\r\n            this.EnableCollisionManager(true, false)\r\n        }, 4);\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.OnTouchStart, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.OnTouchMove, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.OnTouchEnd, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.OnTouchEnd, this);\r\n        \r\n    }\r\n    \r\n    EnableCollisionManager(flag:boolean, protect:boolean)\r\n    {\r\n        let manager = this.node.getComponent(cc.BoxCollider);\r\n        manager.enabled = flag;\r\n        this.node.children[0].active = protect;\r\n    }\r\n\r\n    OnTouchStart(_event: cc.Event.EventTouch)\r\n    {\r\n        //console.log('Start');\r\n        this.delta = 0;\r\n    }\r\n\r\n    OnTouchMove(_event: cc.Event.EventTouch)\r\n    {\r\n        //console.log('Moving');\r\n        this.delta = _event.getDelta().x;\r\n        this.node.position = new cc.Vec3(_event.getDelta().x + this.node.position.x, this.node.position.y, 0);\r\n    }\r\n\r\n    OnTouchEnd(event: cc.Event.EventTouch)\r\n    {\r\n        //console.log('End');\r\n        if (this.delta == 0)\r\n        {\r\n            //console.log(\"shoot\");\r\n            this.bulletfire()\r\n        }\r\n    }\r\n\r\n    bulletfire()\r\n    {\r\n        let newfire: cc.Node = cc.instantiate(this.weapon1);\r\n        this.weaponParent.addChild(newfire);\r\n\r\n        //find the player current position and assign it to new weapon\r\n        let worldpos = cc.v3(0,0,0);\r\n        let pos = cc.v3(0,0,0);\r\n        this.node.convertToWorldSpaceAR(cc.v3(0,0,0), worldpos);\r\n        this.weaponParent.convertToNodeSpaceAR(worldpos, pos);\r\n\r\n        newfire.setPosition(pos);\r\n        newfire.angle = 0;\r\n        //audioEngine.playEffect(this.laserAudio, false); // Shoot audio\r\n    }\r\n\r\n    onCollisionEnter(other, self) \r\n    {\r\n        // disable collider to avoid any further collisions \r\n        // disable green highlight indicating player is not protected and is dying \r\n        this.EnableCollisionManager(false, false);\r\n\r\n        cc.tween(this.node).to(0.2, ({scale:0})).call(()=>{\r\n            this.node.destroy();\r\n            this.game.OnPlayerDead();\r\n        }).start();\r\n\r\n        console.log(\"Player is dead\");\r\n    }\r\n\r\n    start() \r\n    {\r\n\r\n    }\r\n\r\n    update(dt) \r\n    {\r\n        \r\n    }\r\n}\r\n"]}