{"version":3,"sources":["assets\\Script\\EnemyController1.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAE5E,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAA8C,oCAAY;IAD1D;QAAA,qEAsCC;QAlCG,UAAI,GAAG,IAAI,CAAC;QACZ,mBAAa,GAAW,CAAC,CAAC;QAC1B,OAAC,GAAG,CAAC,CAAC;QACN,OAAC,GAAG,CAAC,CAAC;;IA+BV,CAAC;IA7BG,wBAAwB;IAExB,iCAAM,GAAN;QAEI,sDAAsD;QACtD,IAAI,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;QAChD,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,2CAAgB,GAAhB,UAAiB,KAAK,EAAE,IAAI;QAA5B,iBAKC;QAHG,2EAA2E;QAC3E,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAK,KAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAA,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QAClF,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,gCAAK,GAAL;IAGA,CAAC;IAED,iCAAM,GAAN,UAAQ,EAAE;QAEN,gCAAgC;QAChC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;IAErD,CAAC;IApCgB,gBAAgB;QADpC,OAAO;OACa,gBAAgB,CAqCpC;IAAD,uBAAC;CArCD,AAqCC,CArC6C,EAAE,CAAC,SAAS,GAqCzD;kBArCoB,gBAAgB","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class EnemyController1 extends cc.Component \r\n{\r\n\r\n    game = null;\r\n    deltaRotation: number = 0;\r\n    x = 0;\r\n    y = 1;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () \r\n    {\r\n        //this.game = this.node.parent.getComponent('player');\r\n        let manager = cc.director.getCollisionManager();\r\n        manager.enabled = true;\r\n    }\r\n\r\n    onCollisionEnter(other, self) \r\n    {\r\n        //cc.tween(this.node.getChildByName(\"score\")).to(0.1, ({scale:1})).start();\r\n        cc.tween(this.node).to(0.3, ({scale:0})).call(()=>{this.node.destroy();}).start();\r\n        this.game.gainScore(1);\r\n    }\r\n\r\n    start () \r\n    {\r\n\r\n    }\r\n\r\n    update (dt) \r\n    {\r\n        // move down and rotate positive\r\n        this.node.x -= dt * this.x;\r\n        this.node.y -= dt * Math.random() * 100 * this.deltaRotation * this.y;\r\n        this.node.angle += dt * this.deltaRotation * 100;\r\n\r\n    }\r\n}\r\n"]}