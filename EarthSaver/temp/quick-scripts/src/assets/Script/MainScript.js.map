{"version":3,"sources":["assets\\Script\\MainScript.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAE5E,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAI1C;IAAwC,8BAAY;IAFpD;QAAA,qEAsEC;QAjEG,iBAAW,GAAY,IAAI,CAAC;QAG5B,iBAAW,GAAc,IAAI,CAAC;QAG9B,YAAM,GAAa,IAAI,CAAC;QAGxB,kBAAY,GAAa,IAAI,CAAC;QAG9B,sBAAgB,GAAa,IAAI,CAAC;QAElC,WAAK,GAAW,CAAC,CAAC;QAClB,eAAS,GAAW,CAAC,CAAC;;IAkD1B,CAAC;IAhDG,wBAAwB;IAExB,2BAAM,GAAN;QAEI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,GAAG,CAAC;IACnC,CAAC;IAED,iCAAY,GAAZ;QAEI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;QAChC,kCAAkC;QAClC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,EAAE,EAAE,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;IACvE,CAAC;IAED,kCAAa,GAAb;QAEI,IAAI,QAAQ,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC7B,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;QACjD,QAAQ,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;IAC1D,CAAC;IAED,8BAAS,GAAT;QAEI,6CAA6C;QAC7C,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;QAChB,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IACrD,CAAC;IAED,wCAAmB,GAAnB;QAEI,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAE,CAAC,GAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAC,CAAC,GAAG,EAAE,CAAC,GAAC,GAAG,CAAC;QAC3E,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAE,CAAC,GAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,GAAG,GAAG,CAAC,GAAE,GAAG,CAAC;QAC9E,OAAO,CAAC,GAAG,CAAC,KAAK,EAAC,KAAK,CAAC,CAAC;QACzB,OAAO,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC/B,CAAC;IAED,0BAAK,GAAL;IAGA,CAAC;IAED,2BAAM,GAAN,UAAQ,EAAE;IAGV,CAAC;IAhED;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;mDACU;IAG5B;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;mDACU;IAG9B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8CACM;IAGxB;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;oDACW;IAG9B;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;wDACe;IAfjB,UAAU;QAF9B,OAAO;OAEa,UAAU,CAoE9B;IAAD,iBAAC;CApED,AAoEC,CApEuC,EAAE,CAAC,SAAS,GAoEnD;kBApEoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\n\r\nexport default class MainScript extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    startScreen: cc.Node = null;\r\n\r\n    @property(cc.Prefab)\r\n    EnemyPrefab: cc.Prefab = null;\r\n\r\n    @property(cc.Node)\r\n    player : cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    scoreDisplay: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    highscoreDisplay: cc.Label = null;\r\n\r\n    score: number = 0;\r\n    highScore: number = 0;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () \r\n    {\r\n        this.score = 0;\r\n        this.highScore = 0;\r\n        this.scoreDisplay.string = '0';\r\n    }\r\n\r\n    OnStartClick()\r\n    {\r\n        this.startScreen.active = false;\r\n        // generate 2 enemies every second\r\n        this.schedule(this.spawnNewRound, 0.5, cc.macro.REPEAT_FOREVER, 0);\r\n    }\r\n\r\n    spawnNewRound()\r\n    {\r\n        let newRound = cc.instantiate(this.EnemyPrefab);\r\n        this.node.addChild(newRound);\r\n        newRound.setPosition(this.getNewEnemyPosition()); \r\n        newRound.getComponent('EnemyController1').game = this;\r\n    }\r\n\r\n    gainScore() \r\n    {\r\n        // Update the words of the scoreDisplay Label\r\n        this.score += 1;\r\n        this.scoreDisplay.string = this.score.toString();\r\n    }\r\n\r\n    getNewEnemyPosition() \r\n    {\r\n        var randX = Math.random() * Math.random() *2* (this.node.width/2 - 20)-250;\r\n        var randY = Math.random() * Math.random() *5* (this.node.height/2 - 200)+ 200;\r\n        console.log(randX,randY);\r\n        return cc.v2(randX, randY);\r\n    }\r\n\r\n    start () \r\n    {\r\n\r\n    }\r\n\r\n    update (dt) \r\n    {\r\n\r\n    }\r\n}\r\n"]}